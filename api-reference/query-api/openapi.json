{
    "openapi": "3.0.1",
    "info": {
        "title": "OpenAPI for Query and Execution API",
        "description": "API for Querying and Executing Dune Data",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.dune.com/api"
        }
    ],
    "paths": {
        "/v1/query/{queryId}/execute": {
            "TODO": "TODO POST"
        },
        "/v1/query/{queryId}/results": {
            "get": {
                "summary": "Returns the result of a Query execution on Dune",
                "description": "This API allows for anyone to read  the results of a query execution on Dune data platform",
                "operationId": "GetQueryResults",
                "parameters": [
                    {
                        "in": "path",
                        "name": "queryId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "unique identifier of the query"
                    },
                    {
                        "in": "header",
                        "name": "X-DUNE-API-KEY",
                        "schema": {
                            "type": "string"
                        },
                        "description": "API Key for accessing this service",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryResult"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/query/{queryId}/results/csv": {
            "TODO": "TODO"
        },
        "/v1/execution/{executionId}/results/csv": {
            "TODO": "TODO GET"
        },
        "/v1/execution/{executionId}/results": {
            "TODO": "TODO GET"
        },
        "/v1/execution/{executionId}/status": {
            "TODO": "TODO GET"
        },
        "/v1/execution/{executionId}/cancel": {
            "TODO": "TODO POST"
        },
        "/v1/execution/{executionId}": {
            "TODO": "TODO DELETE (check if this is public?)"
        }
    },
    "components": {
        "schemas": {
            "TODO": "need to go thru everything here",
            "QueryResult": {
                "required": [
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/QueryResultMetadata",
                        "description": "Additional metadata about this query result and respective query"
                    },
                    "columnNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the columns present in the response. Can be empty if query failed."
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QueryResultRow"
                        },
                        "description": "The returned rows for this Query. Can be empty if query failed."
                    },
                    "queryFailed": {
                        "type": "boolean",
                        "default": false,
                        "description": "Flag indicating if query execution failed. See errorMessage if true"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Error message in case the execution failed, this field is present if query failed"
                    }
                }
            },
            "QueryResultRow": {
                "type": "object",
                "description": "A row is dictionary of key-value pairs, each pair corresponding to a column"
            },
            "QueryResultMetadata": {
                "required": [
                    "executedAt",
                    "jobId",
                    "queryDurationMillis",
                    "queryId",
                    "queryVersion"
                ],
                "type": "object",
                "properties": {
                    "queryId": {
                        "type": "string",
                        "description": "QueryID uniquely identifies the query"
                    },
                    "queryVersion": {
                        "type": "string",
                        "description": "QueryVersion identifies the specific version of the query that was executed"
                    },
                    "jobId": {
                        "type": "integer",
                        "description": "The Job ID for this result (and the corresponding execution) of the Query."
                    },
                    "queryParameters": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "the Query Parameters used for this query execution."
                    },
                    "executedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the query started execution"
                    },
                    "queryDurationMillis": {
                        "type": "integer",
                        "description": "Time it took for the Query to complete, in milliseconds"
                    },
                    "resultBytes": {
                        "type": "integer",
                        "description": "Total number of bytes returned by the Query"
                    },
                    "resultRows": {
                        "type": "integer",
                        "description": "Total number of rows returned by the Query"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}